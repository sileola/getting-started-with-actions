# This is a basic workflow to help you get started with Actions

name: MULTI JOB WORKFLOW

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This first job on this workflow is called "build-on-windows"
  build-on-windows:
    # The job will run on windows-latest
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Step 1 - Log the prebuild disc space
        run: ls
        
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Step 2 - Checkoout the main GitHub branch
        uses: actions/checkout@v3

      - name: Step 3 - Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          java-version: 17

      - name: Step 4 - Build your Jakarta web app with Maven
        run: echo mvn -B package --file pom.xml
        
      - name: Step 5 - Check Windows Execution Policy
        run: |
          echo Here is the Windows ExecutionPolicy:
          Get-ExecutionPolicy
          
      - name: Step 6 - List Windows Environment Variables
        run: env
        
      
  # This second job on this workflow is called "build-on-ubuntu"  
  build-on-ubuntu:
    # The job will run on ubuntu-latest
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
      - name: Step 1 - Log the pre-build disc space
        run: ls
        
      - name: Step 2 - Checkout the main GitHub branch
        uses: actions/checkout@v3
        
      - name: Step 3 - Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          java-version: 17
          
      - name: Step 4 - Build your Jakarta web app with Maven
        run: echo mvn -B package --file pom.xml
        
      - name: Step 5 - List the Ubuntu Environment Variables
        run: env
    
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
          
